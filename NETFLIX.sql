SELECT * FROM NETFLIX_TITLE;
DESCRIBE NETFLIX_TITLE;

--- LIST ALL TITLES WITH THEIR SHOW_ID,TITLE AND TYPE

SELECT SHOW_ID,TITLE,TYPE FROM NETFLIX_TITLE;

--- COUNT THE NUMBER OF MOVIES AND TV SHOWS

SELECT TYPE,COUNT(*) AS TOTAL_COUNT
FROM NETFLIX_TITLE
GROUP BY TYPE;

--- DISPLAY ALL COLUMNS FOR TITLES THAT ARE MOVIES

SELECT * FROM NETFLIX_TITLE
WHERE TYPE = 'Movie';

--- LIST ALL MOVIES RELEASED IN A SPECIFIC YEAR (e.g.2020)

SELECT * FROM NETFLIX_TITLE
WHERE TYPE = 'Movie' AND RELEASE_YEAR = 2020;

--- FIND ALL TITLES WHERE DESCRIPTION CONTAINS THE WORD FAMILY

SELECT TITLE,DESCRIPTION FROM NETFLIX_TITLE
WHERE DESCRIPTION LIKE '%family%';

--- TOTAL NUMBER OF TITLES IN DATASET

SELECT COUNT(TITLE) AS TOTAL_NUMBER_TITLE FROM NETFLIX_TITLE;

--- TOP 5 LATEST TITLES BASED ON THE DATE_ADDED,SORTED IN DESCENDING ORDER

SELECT *
FROM (
    SELECT *
    FROM NETFLIX_TITLE
    WHERE DATE_ADDED IS NOT NULL
    ORDER BY DATE_ADDED DESC
)
WHERE ROWNUM <= 5;

--- LIST ALL TITLES ALONG WITH THE NUMBER OF OTHER TITLES BY THE SAME DIRECTOR
--- INCLUDE COLUMN FOR SHOW_ID,TITLE,DIRECTORS AND NUMBER_OF_TITLE

CREATE TABLE DIRECTOR AS (
    SELECT DIRECTOR, COUNT(DIRECTOR) AS MOVIE_COUNT
    FROM NETFLIX_TITLE
    GROUP BY DIRECTOR
)
SELECT N.SHOW_ID,N.TITLE,N.DIRECTOR,D.MOVIE_COUNT
FROM NETFLIX_TITLE N INNER JOIN DIRECTOR D
ON N.DIRECTOR = D.DIRECTOR;

--- TOTAL NUMBER OF TITLES FOR EACH COUNTRY.DISPLAY COUNTRY AND COUNT OF TITLES

SELECT COUNTRY,COUNT(TITLE) AS NO_TITLE FROM NETFLIX_TITLE
GROUP BY COUNTRY;

--- WRITE A QUERY USING A CASE STATEMENT TO CATEGORIZE TITLES INTO THREE CATEGORIES BASED ON THEIR
--- RATING. FAMILY FOR RATING R,PG-13,KIDS FOR TV-MA,TV-Y7,TV-PG,AND ADULT FOR ALL OTHER RATINGS

SELECT SHOW_ID, TITLE, 
 CASE
 WHEN RATING IN ('R','PG-13') THEN 'FAMILY'
 WHEN RATING IN ('TV-MA','TV-Y7','TV-PG') THEN 'KIDS'
 ELSE 'ADULT'
 END AS CATEGORIZE_TITLE
 FROM NETFLIX_TITLE;
 
---  ADD A NEW COLUMN TITLE_LENGTH TO THE TITLES TABLE THAT CALCULATE
--- THE LENGTH OF EACH TITLES

ALTER TABLE NETFLIX_TITLE ADD TITLE_LENGTH NUMBER(15);
UPDATE NETFLIX_TITLE SET TITLE_LENGTH = LENGTH(TITLE);
SELECT * FROM NETFLIX_TITLE;

--- CREATE A VIEW NAMED RECENTTITLES THAT INCLUDE TITLES ADDED IN THE LAST 30 DAYS

CREATE OR REPLACE VIEW RECENTTITLES AS
(SELECT SHOW_ID, TITLE, DATE_ADDED 
FROM NETFLIX_TITLE
WHERE MONTHS_BETWEEN(SYSDATE, DATE_ADDED) <= 1);
SELECT * FROM USER_VIEWS;

--- RANK TITLES BASED ON THEIR RELEASE_YEAR WITHIN EACH COUNTRY USING A WINDOW FUNCTION

SELECT TITLE,COUNTRY,RELEASE_YEAR, 
RANK() OVER (PARTITION BY COUNTRY ORDER BY RELEASE_YEAR DESC) AS RANK
FROM NETFLIX_TITLE;

--- CALCULATE THE CUMULATIVE COUNT OF TITLES ADDED EACH MONTHS SORTED BY DATE_ADDED

SELECT 
    TO_CHAR(DATE_ADDED, 'YYYY-MM') AS MONTH_ADDED,
    COUNT(*) AS TITLES_ADDED_THIS_MONTH,
    SUM(COUNT(*)) OVER (ORDER BY TO_CHAR(DATE_ADDED, 'YYYY-MM')) AS CUMULATIVE_COUNT
FROM 
    NETFLIX_TITLE
GROUP BY 
    TO_CHAR(DATE_ADDED, 'YYYY-MM')
ORDER BY 
    TO_CHAR(DATE_ADDED, 'YYYY-MM');
    
--- FIND THE COUNTRY WITH THE HIGHEST AVERAGE RATING FOR TITLES

SELECT COUNTRY, AVG_RATING
FROM (
    SELECT COUNTRY, 
           AVG(CASE 
                   WHEN RATING LIKE 'TV%' THEN NULL
                   WHEN RATING = 'G' THEN 1
                   WHEN RATING = 'PG' THEN 2
                   WHEN RATING = 'PG-13' THEN 3
                   WHEN RATING = 'R' THEN 4
                   ELSE 5 
               END) AS AVG_RATING
    FROM NETFLIX_TITLE
    WHERE COUNTRY IS NOT NULL
    GROUP BY COUNTRY
    ORDER BY AVG_RATING DESC
) 
WHERE ROWNUM = 1;

--- FIND ALL TITLES WITHOUT A DIRECTOR

SELECT * FROM NETFLIX_TITLE
WHERE DIRECTOR = 'NO Director';




    
    
